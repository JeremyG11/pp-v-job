import { db } from "@/lib/db";
import { TweetAccountStatus } from "@prisma/client";

export const initializeState = async () => {
  const twitterAccounts = await db.twitterAccount.findMany({
    where: { status: TweetAccountStatus.ACTIVE },
    include: {
      painPoint: {
        select: { siteSummary: true, keywords: true },
      },
    },
  });

  for (const account of twitterAccounts) {
    if (!account) {
      throw new Error(`Twitter account not found for id ${account.userId}`);
    }

    const { painPoint } = account;
    const businessDescription = painPoint.siteSummary;
    const keywords = painPoint.keywords;

    /**
     * Getting the tweets generated by the account, today.
     * @param account - The Twitter account details.
     */

    const tweets = await db.tweet.findMany({
      where: {
        twitterAccountId: account.id,
        createdAt: {
          gte: new Date(new Date().setHours(0, 0, 0, 0)),
        },
      },
    });

    return {
      messages: [
        {
          role: "system",
          content: "Analyze the relevance of these tweets to the business.",
        },
        {
          role: "user",
          content: JSON.stringify({
            tweets: tweets.map((t) => t.text),
            businessDescription,
            keywords,
          }),
        },
      ],
    };
  }
};
